cmake_minimum_required(VERSION 3.2)

project(SSBase)

set(CMAKE_CXX_STANDARD 14)

if (${CMAKE_SYSTEM_NAME} MATCHES "Linux")
	MESSAGE(STATUS "current platform: Linux ")
  add_definitions(-DSS_PLATFORM_LINUX)
  add_definitions(-DSS_PLATFORM_UNIX)
elseif (${CMAKE_SYSTEM_NAME} MATCHES "Windows")
	MESSAGE(STATUS "current platform: Windows")
  add_definitions(-DSS_PLATFORM_WIN32)
  elseif (${CMAKE_SYSTEM_NAME} MATCHES "FreeBSD")
	MESSAGE(STATUS "current platform: FreeBSD")
  add_definitions(-DSS_PLATFORM_UNIX)
  elseif (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
	MESSAGE(STATUS "current platform: Darwin")
  add_definitions(-DSS_PLATFORM_UNIX)
  add_definitions(-DSS_PLATFORM_APPLE)
else ()
	MESSAGE(STATUS "other platform: ${CMAKE_SYSTEM_NAME}")
endif()

add_subdirectory(src/SSBase)
add_subdirectory(src/SSIO)
add_subdirectory(src/SSNet)

add_executable(testmain tests/testmain.cpp)
add_dependencies(testmain SSBase SSIO)
target_link_directories(testmain PRIVATE thirdparty/lib)
target_link_libraries(testmain SSBase SSIO SSNet uv archive zip z)
target_include_directories(testmain PRIVATE src)